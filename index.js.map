{"version":3,"file":"index.js","mappings":"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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///./src/index.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import \"./style.css\"\nimport * as THREE from \"three\"\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\"\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\"\nimport { DRACOLoader } from \"three/examples/jsm/loaders/dracoloader\"\nimport * as dat from \"lil-gui\"\nimport heroVertex from \"./shaders/heroPlaneShader/vertex.glsl\"\nimport heroFragment from \"./shaders/heroPlaneShader/fragment.glsl\"\nimport * as TWEEN from \"@tweenjs/tween.js\"\nimport isEmail from \"validator/es/lib/isEmail\"\n\nwindow.three = THREE\n\nlet debug = false\nlet guiControls = false\nif (window.location.hash === \"#debug\") {\n    debug = false\n    guiControls = true\n}\nconst debugParameters = {}\ndebugParameters.TRANS_MAX = 0.95\n\n//Global states\nlet transition = debugParameters.TRANS_MAX\nlet stopTransition = false\n\n/**\n * GLTF loaders\n */\nconst dracoloader = new DRACOLoader()\ndracoloader.setDecoderPath(\"/draco/\")\nconst gltfLoader = new GLTFLoader()\ngltfLoader.setDRACOLoader(dracoloader)\nconst textureLoader = new THREE.TextureLoader()\n\n/**\n * Base\n */\n// Debug\nlet gui = null\nif (guiControls) {\n    gui = new dat.GUI()\n}\n\n// Canvas\nconst canvas = document.querySelector(\"canvas.webgl\")\nconst canvas2 = document.querySelector(\"canvas.canvas2\")\n\n// Scene\nconst scene = new THREE.Scene()\n\n/**\n * Loading models\n */\nconst heroRobotEyes = textureLoader.load(\"/textures/eyes.png\")\nheroRobotEyes.generateMipmaps = false\nheroRobotEyes.minFilter = THREE.NearestFilter\nheroRobotEyes.center.set(0.5, 0.5)\n// heroRobotEyes.wrapS = THREE.RepeatWrapping\n// heroRobotEyes.wrapT = THREE.RepeatWrapping\n//heroRobotEyes.repeat.set(2, 1)\nlet robot = null\nlet robotColors = []\nlet robotBW = []\nwindow.robotColors = robotColors\nwindow.robotBW = robotBW\nlet robotEyeMaterial = null\ngltfLoader.load(\"/models/heroRobot/Hero_robot.glb\", (model) => {\n    scene.add(model.scene)\n    window.robot = model.scene\n    model.castShadow = true\n    for (let i = 0; i < model.scene.children.length; i++) {\n        const child = model.scene.children[i]\n        child.castShadow = true\n        if (child.name === \"displayImg\") {\n            child.material.transperent = true\n            child.material.map = heroRobotEyes\n            child.material.emissive.set(\"#000000\")\n            child.material.emissiveMap = heroRobotEyes\n            robotEyeMaterial = child.material\n            // child.material.onBeforeCompile = (shader) => {\n            //     console.log(shader)\n            //     shader.fragmentShader = shader.fragmentShader.replace(\n            //         \"#include <map_fragment>\",\n            //         `#ifdef USE_MAP\n\n            //     vec4 sampledDiffuseColor = vec4(vUv, 1.0, 1.0 );\n\n            //     #ifdef DECODE_VIDEO_TEXTURE\n\n            //         // inline sRGB decode (TODO: Remove this code when https://crbug.com/1256340 is solved)\n\n            //         sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\n            //     #endif\n\n            //     diffuseColor *= sampledDiffuseColor;\n\n            //     #endif`\n            //     )\n            // }\n        }\n        // console.log(child.name)\n        // console.log(child.material.color)\n        robotColors[i] = new THREE.Color()\n        robotColors[i].lerp(child.material.color, 1)\n        let avgColor =\n            (child.material.color.r + child.material.color.g + child.material.color.b) / 3\n        robotBW[i] = new THREE.Color()\n        robotBW[i].r = robotBW[i].g = robotBW[i].b = avgColor\n        child.material.color.lerp(robotBW[i], 1)\n    }\n    model.scene.position.set(4, 0, 4)\n    model.scene.lookAt(4, 0, 10)\n    model.scene.rotation.y = Math.PI\n    robot = model\n    heroSpotLight.lookAt(model.scene.position)\n    if (gui) {\n        gui.add(model.scene.rotation, \"y\")\n            .min(-Math.PI)\n            .max(Math.PI)\n            .step(0.01)\n            .name(\"Robot Rotation\")\n    }\n})\n\n/**\n * Hero plane\n */\nconst planeUniform = {\n    utransition: { value: 0.0 },\n    uColor: {\n        value: new THREE.Vector3(0, 0, 0),\n    },\n}\n\nconst heroPlaneMaterial = new THREE.MeshPhysicalMaterial({\n    // vertexShader: heroVertex,\n    // fragmentShader: heroFragment,\n    metalness: 0,\n    roughness: 1,\n    transparent: true,\n    color: \"#d3d3d3\",\n})\nheroPlaneMaterial.onBeforeCompile = (shader) => {\n    shader.uniforms.utransition = planeUniform.utransition\n    shader.uniforms.uColor = planeUniform.uColor\n    shader.vertexShader = shader.vertexShader.replace(\n        \"#include <common>\",\n        `\n        #define USE_UV\n    #include <common>\n    ${heroVertex}\n    `\n    )\n    shader.vertexShader = shader.vertexShader.replace(\n        \"#include <uv_vertex>\",\n        `\n        #include <uv_vertex>\n        vtransition = utransition;\n        vColor = uColor;\n    `\n    )\n    shader.fragmentShader = shader.fragmentShader.replace(\n        \"#include <common>\",\n        `\n        #include <common>\n        #define USE_UV\n        varying float vtransition;\n        varying vec3 vColor;\n    `\n    )\n    shader.fragmentShader = shader.fragmentShader.replace(\"#include <color_fragment>\", heroFragment)\n    // shader.fragmentShader = shader.fragmentShader.replace(\n    //     \"#include <output_fragment>\",\n    //     `\n    //     #include <output_fragment>\n    //     gl_FragColor.rgb += 0.5;\n    // `\n    // )\n}\nconst heroPlane = new THREE.Mesh(new THREE.PlaneGeometry(300, 300), heroPlaneMaterial)\nheroPlane.position.z = -5\nheroPlane.position.x = -25\nheroPlane.receiveShadow = true\n\nscene.add(heroPlane)\n\n/***\n * Switching Action\n */\nconst heroText1 = document.getElementsByClassName(\"hero-text\")[0]\nconst heroText2 = document.getElementsByClassName(\"hero-text\")[1]\nconst tagLine = document.getElementsByClassName(\"tag-line\")[0]\nlet transitionAniEx = 0\n\nconst heroSwitchFunction = () => {\n    if (robot && !debug && !stopTransition) {\n        if (transition === debugParameters.TRANS_MAX) {\n            transition = 0.0\n            const tween = new TWEEN.Tween({\n                camX: camera.position.x,\n                camY: camera.position.y,\n                camZ: camera.position.z,\n                ambInten: 0,\n                time: 1,\n                heroSpotLightPosX: heroSpotLight.position.x,\n                transitionAni: transitionAniEx,\n                robotRotationY: robot.scene.rotation.y,\n            })\n                .to({\n                    camX: 9,\n                    camY: 2,\n                    camZ: 10,\n                    ambInten: 0.1,\n                    time: 0,\n                    heroSpotLightPosX: 42,\n                    transitionAni: debugParameters.TRANS_MAX,\n                    robotRotationY: 3.84,\n                })\n                .onUpdate((params) => {\n                    camera.position.set(params.camX, params.camY, params.camZ)\n                    let i = 0\n                    transitionAniEx = params.transitionAni\n                    for (const child of robot.scene.children) {\n                        child.material.color.lerp(robotColors[i], 1 - params.time)\n                        if (child.name === \"headDisplayBorder\") {\n                            //console.log(1 - params.time)\n                            console.log(child.material.color)\n                        }\n                        i++\n                    }\n                    heroSpotLight.position.x = params.heroSpotLightPosX\n                    robot.scene.rotation.y = params.robotRotationY\n                    planeUniform.utransition.value = params.transitionAni\n                    light.intensity = params.ambInten\n                    heroText2.style.color = `hsl(100, 0%, ${params.time * 100}%)`\n                    tagLine.style.color = `hsl(100, 0%, ${params.time * 100}%)`\n                    const t = (1 - params.time) * 0.5\n                    const eyecolor = new THREE.Color(t, t, t)\n                    robotEyeMaterial.emissive.copy(eyecolor)\n                })\n                .easing(TWEEN.Easing.Exponential.In)\n                .onStart(() => {\n                    console.log(\"Animation stoped\")\n                    heroSpotLightAnimation.stop()\n                })\n            tween.start()\n        } else {\n            transition = debugParameters.TRANS_MAX\n            const tween = new TWEEN.Tween({\n                camX: camera.position.x,\n                camY: camera.position.y,\n                camZ: camera.position.z,\n                ambInten: 0.1,\n                time: 0,\n                transitionAni: transitionAniEx,\n                robotRotationY: robot.scene.rotation.y,\n            })\n                .to({\n                    camX: 13.75,\n                    camY: 2.14,\n                    camZ: 15.22,\n                    ambInten: 0,\n                    time: 1,\n                    transitionAni: 0.0,\n                    robotRotationY: Math.PI,\n                })\n                .onUpdate((params) => {\n                    camera.position.set(params.camX, params.camY, params.camZ)\n                    let i = 0\n                    transitionAniEx = params.transitionAni\n                    for (const child of robot.scene.children) {\n                        child.material.color.lerp(robotBW[i], params.time)\n                        if (child.name === \"headDisplayBorder\") console.log(child.material.color)\n                        i++\n                    }\n                    robot.scene.rotation.y = params.robotRotationY\n                    planeUniform.utransition.value = params.transitionAni\n                    light.intensity = params.ambInten\n                    heroText2.style.color = `hsl(100, 0%, ${params.time * 100}%)`\n                    tagLine.style.color = `hsl(100, 0%, ${params.time * 100}%)`\n                    const t = (1 - params.time) * 0.5\n                    const eyecolor = new THREE.Color(t, t, t)\n                    robotEyeMaterial.emissive.copy(eyecolor)\n                })\n                .easing(TWEEN.Easing.Exponential.In)\n                .onComplete(() => {\n                    console.log(\"Animation started\")\n                    heroSpotLightAnimation.start()\n                })\n            tween.start()\n        }\n    }\n}\n\ndocument.querySelector(\".heroWrapper\").addEventListener(\"mouseup\", heroSwitchFunction)\n\n/**\n * Sizes\n */\nconst sizes = {\n    width: window.innerWidth,\n    height: window.innerHeight,\n}\n\n/**\n * Camera\n */\n// Base camera\nconst camera = new THREE.PerspectiveCamera(75, sizes.width / sizes.height, 0.1, 200)\ncamera.position.set(13.75, 2.14, 15.22)\ncamera.rotation.set(-0.5184, 1.26, 0.5)\nscene.add(camera)\n\n//Controls\nlet controls = null\nif (debug) {\n    controls = new OrbitControls(camera, canvas)\n    controls.enableDamping = true\n}\n/**\n * Renderer\n */\nconst renderer = new THREE.WebGLRenderer({\n    canvas: canvas,\n})\nrenderer.setSize(sizes.width, sizes.height)\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\nrenderer.outputEncoding = THREE.sRGBEncoding\nrenderer.setClearAlpha(0)\nrenderer.shadowMap.enabled = true\n\nif (gui) {\n    gui.add(camera.position, \"x\").min(-50).max(20).step(0.1)\n    gui.add(camera.position, \"y\").min(-50).max(20).step(0.1)\n    gui.add(camera.position, \"z\").min(-50).max(20).step(0.1)\n    gui.add(camera.rotation, \"x\").min(-Math.PI).max(Math.PI).step(0.01)\n    gui.add(camera.rotation, \"y\").min(-Math.PI).max(Math.PI).step(0.01)\n    gui.add(camera.rotation, \"z\").min(-Math.PI).max(Math.PI).step(0.01)\n    debugParameters.logCamera = () => {\n        console.log(camera.position)\n        console.log(camera.rotation)\n        console.log(camera.quaternion)\n    }\n    gui.add(debugParameters, \"logCamera\").name(\"logCamera\")\n}\n\n//Lights\nconst light = new THREE.AmbientLight(\"#d3d3d3\", 0)\nscene.add(light)\n//const heroDirectionalLight = new THREE.DirectionalLight(\"#ffffff\", 0.1)\n//scene.add(heroDirectionalLight)\nconst heroSpotLight = new THREE.SpotLight(\"#ffffff\", 2, 100, Math.PI / 10)\nheroSpotLight.position.set(120, 24, -7)\nheroSpotLight.castShadow = true\nheroSpotLight.shadow.mapSize.width = 1024 / 2\nheroSpotLight.shadow.mapSize.height = 1024 / 2\nheroSpotLight.shadow.camera.near = 1\nheroSpotLight.shadow.camera.far = 50\nheroSpotLight.shadow.camera.fov = 30\nif (gui) {\n    gui.add(light, \"intensity\").min(0).max(2).step(0.01).name(\"Ambient Light\")\n    gui.add(heroDirectionalLight.position, \"x\").min(-50).max(50).step(0.1)\n    gui.add(heroDirectionalLight.position, \"y\").min(-50).max(50).step(0.1)\n    gui.add(heroDirectionalLight.position, \"z\").min(-50).max(50).step(0.1)\n    gui.add(heroDirectionalLight, \"intensity\").min(0).max(2).step(0.01).name(\"SpotLight\")\n    //gui.add(heroDirectionalLight, \"intensity\").min(0).max(1).step(0.01).name(\"dirLight\")\n}\nscene.add(heroSpotLight)\n/**\n * Hero Spot Light Animation\n */\nlet aniCount = 0\nconst heroSpotLightAnimation = new TWEEN.Tween({\n    x: heroSpotLight.position.x,\n    inten: heroSpotLight.intensity,\n})\n    .to({\n        x: -80,\n    })\n    .easing(TWEEN.Easing.Linear.None)\n    .duration(4000)\n    .onUpdate((params) => {\n        heroSpotLight.position.x = params.x\n        //console.log(heroSpotLight.position.x)\n    })\n    .repeat(Infinity)\n\nheroSpotLightAnimation.start()\nwindow.spotLight = heroSpotLight\n\n//---------------------------------------------------------------------------------------\n\nif (debug) {\n    const spotLightHelper = new THREE.SpotLightHelper(heroSpotLight)\n    scene.add(spotLightHelper)\n}\n\nheroPlane.lookAt(camera.position)\n\n/**\n * Custome Controls\n */\n// const cameraControlsPrev = {\n//     x: 0,\n//     y: 0,\n// }\n\n/***\n *\n *  Intersection observers\n *\n */\nconst faders = document.querySelectorAll(\".fade-in\")\nconst appearOnScrollOptions = {\n    threshold: 1,\n    rootMargin: \"0px 0px -50% 0px\",\n}\nconst appearOnScroll = new IntersectionObserver((entries, appearOnScroll) => {\n    entries.forEach((entry) => {\n        if (!entry.isIntersecting) {\n            entry.target.classList.remove(\"appear\")\n            return\n        } else {\n            entry.target.classList.add(\"appear\")\n        }\n    })\n}, appearOnScrollOptions)\n\nfaders.forEach((fader) => {\n    appearOnScroll.observe(fader)\n})\n\nwindow.addEventListener(\"scroll\", () => {\n    // if (scrollY > innerHeight) {\n    //     console.log(\"stop\")\n    //     droneCanvasContainer.style.top = scrollY\n    // } else {\n    //     droneCanvasContainer.style.top = \"150vh\"\n    // }\n    if (window.scrollY > 20 && !stopTransition) {\n        if (transition == debugParameters.TRANS_MAX) heroSwitchFunction()\n        stopTransition = true\n    } else if (window.scrollY < 20 && stopTransition) {\n        stopTransition = false\n        if (transition == 0) heroSwitchFunction()\n    }\n})\n\ndocument.getElementById(\"form-submit\").addEventListener(\"click\", (e) => {\n    e.preventDefault()\n    const name = document.getElementById(\"form-name\").value\n    const email = document.getElementById(\"form-email\").value\n    console.log(email, name)\n    if (name.length <= 0 || !isEmail(email)) {\n        const notification = document.getElementById(\"email-response\")\n        notification.innerHTML = \"Enter valid data\"\n        notification.classList.add(\"appear\")\n        setTimeout(() => {\n            notification.classList.remove(\"appear\")\n        }, 2000)\n        setTimeout(() => {\n            notification.innerHTML = \"Thanks for your response\"\n        }, 2100)\n        return\n    }\n\n    fetch(\"https://backend.ackrobotics.com/api/getInTouch\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            name,\n            email,\n        }),\n    })\n        .then((res) => {\n            if (res.ok) {\n                return res.json()\n            } else {\n                throw \"Server error\"\n            }\n        })\n        .then((data) => {\n            console.log(data)\n            const notification = document.getElementById(\"email-response\")\n            notification.classList.add(\"appear\")\n            setTimeout(() => {\n                notification.classList.remove(\"appear\")\n            }, 2000)\n            document.getElementById(\"form-name\").value = \"\"\n            document.getElementById(\"form-email\").value = \"\"\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n})\n\n///////////////////////////////////////////////////////////////////////////////////////////\n\n////////////////////////////////////DRONE EFFECT///////////////////////////////////////////\n\n///////////////////////////////////////////////////////////////////////////////////////////\n\n// Scene\nconst scene2 = new THREE.Scene()\nlet drone = null\nlet rots = []\nlet trottles = []\ntrottles.push(document.querySelector(\"#trottle1\"))\ntrottles.push(document.querySelector(\"#trottle2\"))\ntrottles.push(document.querySelector(\"#trottle3\"))\ntrottles.push(document.querySelector(\"#trottle4\"))\nconsole.log(trottles)\ngltfLoader.load(\"./models/drone/drone.glb\", (model) => {\n    model.scene.scale.set(0.2, 0.2, 0.2)\n    drone = model.scene\n    drone.position.y = 15\n    drone.rotation.y = -Math.PI * 0.5\n    scene2.add(drone)\n    console.log(drone)\n    for (const i of drone.children) {\n        if (i.name.startsWith(\"rot\")) rots.push(i)\n    }\n    // gui2.add(drone.quaternion, \"w\").min(-1).max(1).step(0.25)\n    // gui2.add(drone.quaternion, \"x\").min(-1).max(1).step(0.25)\n    // gui2.add(drone.quaternion, \"y\").min(-1).max(1).step(0.25)\n    // gui2.add(drone.quaternion, \"z\").min(-1).max(1).step(0.25)\n    window.addEventListener(\"mousemove\", (e) => {\n        const x = e.pageX / window.innerWidth - 0.5\n        let y = e.clientY / window.innerHeight - 0.5\n        sphere.position.x = y * 70\n        sphere.position.z = -x * 200\n        if (transition != debugParameters.TRANS_MAX) {\n            const calcy = Math.min(e.pageY, sizes.height)\n            y = -1 * (calcy / sizes.height - 0.5)\n            camera.position.x = 9 + x\n            camera.position.y = 2 + y\n        }\n    })\n})\n\n// Temporary sphere\nconst sphere = new THREE.Mesh(\n    new THREE.SphereGeometry(1, 32, 32),\n    new THREE.MeshStandardMaterial({ roughness: 0.7 })\n)\nsphere.position.y = 15\nscene2.add(sphere)\n\n/*\n * Lights\n */\n// Ambient light\nconst ambientLight = new THREE.AmbientLight(\"#ffffff\", 0.5)\nscene2.add(ambientLight)\n\n// Directional light\nconst moonLight = new THREE.DirectionalLight(\"#ffffff\", 0.5)\nmoonLight.position.set(4, 5, -2)\nscene2.add(moonLight)\n\n/**\n * Sizes\n */\nconst sizes2 = {\n    width: window.innerWidth,\n    height: canvas2.offsetHeight,\n}\n\nwindow.addEventListener(\"resize\", () => {\n    // Update sizes\n    sizes2.width = window.innerWidth\n    sizes2.height = canvas2.offsetHeight\n\n    // Update camera\n    camera2.aspect = sizes2.width / sizes2.height\n    camera2.updateProjectionMatrix()\n\n    // Update renderer\n    renderer2.setSize(sizes2.width, sizes2.height)\n    renderer2.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n})\n\n/**\n * Camera\n */\n// Base camera\nconst camera2 = new THREE.PerspectiveCamera(75, sizes2.width / sizes2.height, 0.15, 200)\ncamera2.position.x = 35\ncamera2.position.y = 18\ncamera2.position.z = 0\ncamera2.rotation.set(-1.59, 0, 1.6)\nscene2.add(camera2)\ndebugParameters.logCamera2 = () => {\n    console.log(camera2.position)\n    console.log(camera2.rotation)\n    console.log(camera2.quaternion)\n}\n// gui.add(debugParameters, \"logCamera2\").name(\"logCamera2\")\n// gui.add(camera2.position, \"x\").name(\"x\").min(35).max(70).step(0.1)\n// gui.add(camera2.position, \"y\").name(\"y\").min(20).max(30).step(0.1)\n\nconst tripPlate1 = new THREE.Mesh(\n    new THREE.PlaneGeometry(10, 10),\n    new THREE.MeshStandardMaterial({\n        color: \"#ff0000\",\n    })\n)\ntripPlate1.position.set(10, 0, 10)\ntripPlate1.name = \"0\"\ntripPlate1.rotation.x = -Math.PI / 2\n// gui.add(tripPlate1.position, \"y\").name(\"trip height\").min(0).max(10).step(0.1)\n// gui.add(tripPlate1.rotation, \"x\").min(-Math.PI).max(Math.PI).step(0.1)\nscene2.add(tripPlate1)\n\n/**\n * Renderer\n */\nconst renderer2 = new THREE.WebGLRenderer({\n    canvas: canvas2,\n})\nrenderer2.setSize(sizes2.width, sizes2.height)\nrenderer2.setPixelRatio(Math.min(window.devicePixelRatio, 2))\nrenderer2.setClearAlpha(0)\nconst hoverText = document.querySelectorAll(\".hover-text\")\n\n// Floor\nconst floorWidth = 70\nconst floorLength = 200\nconst floorPointsCount = (floorWidth + 1) * (floorLength + 1)\nconst floorGeomentry = new THREE.BufferGeometry()\nconst floorPoints = new Float32Array(floorPointsCount * 3)\nconst floorMaterial = new THREE.PointsMaterial({\n    color: \"#ffffff\",\n    size: 0.4,\n    sizeAttenuation: true,\n    //map: planeTexture,\n})\nconst floor = new THREE.Points(floorGeomentry, floorMaterial)\nfloor.rotation.x = -Math.PI * 0.5\nfloor.position.set(0, 0, 0)\nscene2.add(floor)\nconst computeFloorPoints = (a, b) => {\n    let count = 0\n    for (let i = -35; i <= 35; i++) {\n        for (let j = -100; j < 100; j++) {\n            floorPoints[count++] = i\n            floorPoints[count++] = j\n            let temp = 0\n            if (i - a < 12 && j - b < 12) {\n                temp = 5 * Math.exp(-((i - a) * (i - a) + (j - b) * (j - b)) / 6)\n            }\n            floorPoints[count++] = temp\n        }\n    }\n    floorGeomentry.setAttribute(\"position\", new THREE.BufferAttribute(floorPoints, 3))\n}\ncomputeFloorPoints(0, 0)\n\nlet curr = null\nconst quart = new THREE.Quaternion(0, 0, 0, 1)\nquart.normalize()\nconst droneControls = (deltaTime) => {\n    const jump = 0.016 / 0.5\n    const diffPosition = new THREE.Vector3()\n    diffPosition.subVectors(sphere.position, drone.position)\n    const displacement = Math.min(diffPosition.length(), 25)\n    diffPosition.normalize()\n    diffPosition.multiplyScalar(displacement)\n\n    trottles[0].style.height = `${27 - diffPosition.z * 0.4 + diffPosition.x * 0.4}%`\n    trottles[1].style.height = `${27 + diffPosition.z * 0.4 + diffPosition.x * 0.4}%`\n    trottles[2].style.height = `${27 - diffPosition.z * 0.4 - diffPosition.x * 0.4}%`\n    trottles[3].style.height = `${27 + diffPosition.z * 0.4 - diffPosition.x * 0.4}%`\n\n    diffPosition.multiplyScalar(jump)\n    quart.set(0.3 * diffPosition.z, 0, -0.5 * diffPosition.x, 1)\n    quart.normalize()\n\n    drone.quaternion.copy(quart)\n    //drone.quaternion.normalize()\n    drone.position.addVectors(drone.position, diffPosition)\n    computeFloorPoints(drone.position.x, -drone.position.z)\n\n    for (const i of rots) {\n        i.rotation.y = i.rotation.y + jump * 10\n    }\n\n    // const rayDirection = drone.position.clone()\n    // rayDirection.y = rayDirection.y - 20\n    // rayDirection.normalize()\n    // const ray = new THREE.Raycaster(drone.position, rayDirection)\n    // const intersects = ray.intersectObjects([tripPlate1])\n\n    // there will only be one element in intersects array\n    // based on the assumption there is no overlaping trip planes\n    // if (intersects.length > 0 && curr == null) {\n    //     const index = parseInt(intersects[0].object.name)\n    //     // const screenPosition = intersects[0].object.position.clone();\n    //     // screenPosition.project(camera2);\n    //     // console.log(screenPosition);\n    //     hoverText[index].classList.add(\"appear\")\n    //     curr = hoverText[index]\n    //     console.log(\"entered \" + index)\n    // }\n    // if (curr != null && intersects.length === 0) {\n    //     curr.classList.remove(\"appear\")\n    //     curr = null\n    //     console.log(\"left\")\n    // }\n}\n\nwindow.addEventListener(\"resize\", () => {\n    // Update sizes\n    sizes.width = window.innerWidth\n    sizes.height = canvas.offsetHeight\n\n    // Update camera\n    camera.aspect = sizes.width / sizes.height\n    camera.updateProjectionMatrix()\n\n    // Update renderer\n    renderer.setSize(sizes.width, sizes.height)\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n\n    sizes2.width = window.innerWidth\n    sizes2.height = canvas2.offsetHeight\n\n    // Update camera\n    camera2.aspect = sizes2.width / sizes2.height\n    camera2.updateProjectionMatrix()\n\n    // Update renderer\n    renderer2.setSize(sizes2.width, sizes2.height)\n    renderer2.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n})\n// const gui2 = new dat.GUI()\n// gui2.add(camera2.position, \"x\").min(-15).max(15).step(0.1)\ncamera2.lookAt(0, 0, 0)\n\n/**\n * Animate\n */\nconst clock = new THREE.Clock()\nlet lastTime = 0\nlet deltaTime = 0\nconst tick = (t) => {\n    const elapsedTime = clock.getElapsedTime()\n    deltaTime = elapsedTime - lastTime\n    lastTime = elapsedTime\n\n    // Update controls\n    if (debug) controls.update(elapsedTime)\n\n    TWEEN.update(t)\n\n    if (drone) {\n        drone.quaternion.normalize()\n        droneControls(deltaTime)\n    }\n    // Render\n    renderer.render(scene, camera)\n    renderer2.render(scene2, camera2)\n\n    // Call tick again on the next frame\n    window.requestAnimationFrame(tick)\n}\n\ntick()\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t826: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [601], () => (__webpack_require__(581)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","window","three","THREE","debug","guiControls","location","hash","debugParameters","transition","TRANS_MAX","stopTransition","dracoloader","DRACOLoader","setDecoderPath","gltfLoader","GLTFLoader","setDRACOLoader","textureLoader","gui","dat","canvas","document","querySelector","canvas2","scene","heroRobotEyes","load","generateMipmaps","minFilter","center","set","robot","robotColors","robotBW","robotEyeMaterial","model","add","castShadow","i","children","length","child","name","material","transperent","map","emissive","emissiveMap","lerp","color","avgColor","r","g","b","position","lookAt","rotation","y","Math","PI","heroSpotLight","min","max","step","planeUniform","utransition","value","uColor","heroPlaneMaterial","metalness","roughness","transparent","onBeforeCompile","shader","uniforms","vertexShader","replace","fragmentShader","heroPlane","z","x","receiveShadow","getElementsByClassName","heroText2","tagLine","transitionAniEx","heroSwitchFunction","TWEEN","camX","camera","camY","camZ","ambInten","time","heroSpotLightPosX","transitionAni","robotRotationY","to","onUpdate","params","console","log","light","intensity","style","t","eyecolor","copy","easing","onStart","heroSpotLightAnimation","stop","start","onComplete","addEventListener","sizes","width","innerWidth","height","innerHeight","controls","OrbitControls","enableDamping","renderer","setSize","setPixelRatio","devicePixelRatio","outputEncoding","setClearAlpha","shadowMap","enabled","logCamera","quaternion","shadow","mapSize","near","far","fov","heroDirectionalLight","inten","duration","repeat","Infinity","spotLight","spotLightHelper","faders","querySelectorAll","appearOnScroll","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","remove","threshold","rootMargin","fader","observe","scrollY","getElementById","e","preventDefault","email","isEmail","notification","innerHTML","setTimeout","fetch","method","headers","body","JSON","stringify","then","res","ok","json","data","err","scene2","drone","rots","trottles","push","scale","startsWith","pageX","clientY","sphere","pageY","ambientLight","moonLight","sizes2","offsetHeight","camera2","aspect","updateProjectionMatrix","renderer2","logCamera2","tripPlate1","floorGeomentry","floorPoints","Float32Array","floorPointsCount","floorMaterial","size","sizeAttenuation","floor","computeFloorPoints","a","count","j","temp","exp","setAttribute","quart","normalize","clock","tick","elapsedTime","getElapsedTime","update","deltaTime","diffPosition","subVectors","displacement","multiplyScalar","addVectors","jump","droneControls","render","requestAnimationFrame","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","fulfilled","Object","keys","every","key","splice","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}